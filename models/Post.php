<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "{{%post}}".
 *
 * @property integer $id
 * @property string $name
 * @property string $alias
 * @property string $body
 * @property string $description
 * @property string $title
 * @property string $meta_description
 * @property string $meta_keywords
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $user_id
 * @property string $status
 */
class Post extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName ()
    {
        return '{{%post}}';
    }

    /**
     * @inheritdoc
     */
    public function rules ()
    {
        return [
            [['name', 'title', 'body', 'description'], 'string'],
            [['body', 'name', 'created_at', 'updated_at', 'user_id'], 'required'],
            [['created_at', 'updated_at', 'user_id'], 'integer'],
            [['alias', 'title', 'meta_description', 'meta_keywords'], 'string', 'max' => 250],
            [['status'], 'string', 'max' => 10],
            [['status'], 'default', 'value' => 'deactive'],
        ];
    }

    /**
     * This method is invoked before validation starts.
     * The default implementation raises a `beforeValidate` event.
     * You may override this method to do preliminary checks before validation.
     * Make sure the parent implementation is invoked so that the event can be raised.
     * @return boolean whether the validation should be executed. Defaults to true.
     * If false is returned, the validation will stop and the model is considered invalid.
     */
    public function beforeValidate ()
    {
        if ($this->isNewRecord) {
            $this->created_at = time();
        }
        $this->updated_at = time();
        $this->user_id = Yii::$app->user->id;

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels ()
    {
        return [
            'id'               => Yii::t('app', 'ID'),
            'name'             => Yii::t('app', 'Name'),
            'alias'            => Yii::t('app', 'Alias'),
            'body'             => Yii::t('app', 'Body'),
            'description'      => Yii::t('app', 'Description'),
            'title'            => Yii::t('app', 'Title'),
            'meta_description' => Yii::t('app', 'Meta Description'),
            'meta_keywords'    => Yii::t('app', 'Meta Keywords'),
            'created_at'       => Yii::t('app', 'Created At'),
            'updated_at'       => Yii::t('app', 'Updated At'),
            'user_id'          => Yii::t('app', 'User ID'),
            'status'           => Yii::t('app', 'Status'),
        ];
    }
}
